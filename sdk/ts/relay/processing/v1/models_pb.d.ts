/* eslint-disable */
/*Generated by GenDocu.com*/
// package: relay.processing.v1
// file: relay/processing/v1/models.proto

import * as jspb from "google-protobuf";
import * as google_protobuf_wrappers_pb from "google-protobuf/google/protobuf/wrappers_pb";
import * as google_protobuf_timestamp_pb from "google-protobuf/google/protobuf/timestamp_pb";

export class OperationSummary extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getOperation(): OperationMap[keyof OperationMap];
  setOperation(value: OperationMap[keyof OperationMap]): void;

  getAmount(): number;
  setAmount(value: number): void;

  hasLastUpdated(): boolean;
  clearLastUpdated(): void;
  getLastUpdated(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setLastUpdated(value?: google_protobuf_timestamp_pb.Timestamp): void;

  getReference(): string;
  setReference(value: string): void;

  getReconReference(): string;
  setReconReference(value: string): void;

  getCurrency(): string;
  setCurrency(value: string): void;

  getStatus(): OperationStatusMap[keyof OperationStatusMap];
  setStatus(value: OperationStatusMap[keyof OperationStatusMap]): void;

  hasError(): boolean;
  clearError(): void;
  getError(): OperationError | undefined;
  setError(value?: OperationError): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OperationSummary.AsObject;
  static toObject(includeInstance: boolean, msg: OperationSummary): OperationSummary.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OperationSummary, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OperationSummary;
  static deserializeBinaryFromReader(message: OperationSummary, reader: jspb.BinaryReader): OperationSummary;
}

export namespace OperationSummary {
  export type AsObject = {
    id: string,
    operation: OperationMap[keyof OperationMap],
    amount: number,
    lastUpdated?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    reference: string,
    reconReference: string,
    currency: string,
    status: OperationStatusMap[keyof OperationStatusMap],
    error?: OperationError.AsObject,
  }
}

export class OperationError extends jspb.Message {
  getCode(): string;
  setCode(value: string): void;

  getMessage(): string;
  setMessage(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OperationError.AsObject;
  static toObject(includeInstance: boolean, msg: OperationError): OperationError.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OperationError, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OperationError;
  static deserializeBinaryFromReader(message: OperationError, reader: jspb.BinaryReader): OperationError;
}

export namespace OperationError {
  export type AsObject = {
    code: string,
    message: string,
  }
}

export class Order extends jspb.Message {
  getAmount(): number;
  setAmount(value: number): void;

  getCurrency(): string;
  setCurrency(value: string): void;

  hasReference(): boolean;
  clearReference(): void;
  getReference(): google_protobuf_wrappers_pb.StringValue | undefined;
  setReference(value?: google_protobuf_wrappers_pb.StringValue): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Order.AsObject;
  static toObject(includeInstance: boolean, msg: Order): Order.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Order, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Order;
  static deserializeBinaryFromReader(message: Order, reader: jspb.BinaryReader): Order;
}

export namespace Order {
  export type AsObject = {
    amount: number,
    currency: string,
    reference?: google_protobuf_wrappers_pb.StringValue.AsObject,
  }
}

export interface OperationMap {
  AUTHORIZE: 0;
  CANCEL: 1;
  CHARGE: 2;
  REFUND: 3;
}

export const Operation: OperationMap;

export interface OperationStatusMap {
  PENDING: 0;
  COMPLETED: 1;
  FAILED: 2;
}

export const OperationStatus: OperationStatusMap;

