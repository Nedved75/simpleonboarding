/* eslint-disable */
/*Generated by GenDocu.com*/
// source: relay/processing/v1/payment_processing_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var relay_models_pb = require('../../../relay/models_pb.js');
goog.object.extend(proto, relay_models_pb);
var relay_processing_v1_models_pb = require('../../../relay/processing/v1/models_pb.js');
goog.object.extend(proto, relay_processing_v1_models_pb);
goog.exportSymbol('proto.relay.processing.v1.ChargeRequest', null, global);
goog.exportSymbol('proto.relay.processing.v1.ChargeResponse', null, global);
goog.exportSymbol('proto.relay.processing.v1.GetOperationsSummaryRequest', null, global);
goog.exportSymbol('proto.relay.processing.v1.GetOperationsSummaryResponse', null, global);
goog.exportSymbol('proto.relay.processing.v1.GetSummaryRequest', null, global);
goog.exportSymbol('proto.relay.processing.v1.GetSummaryResponse', null, global);
goog.exportSymbol('proto.relay.processing.v1.RefundRequest', null, global);
goog.exportSymbol('proto.relay.processing.v1.RefundResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.ChargeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.ChargeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.ChargeRequest.displayName = 'proto.relay.processing.v1.ChargeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.ChargeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.ChargeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.ChargeResponse.displayName = 'proto.relay.processing.v1.ChargeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.RefundRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.RefundRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.RefundRequest.displayName = 'proto.relay.processing.v1.RefundRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.RefundResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.RefundResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.RefundResponse.displayName = 'proto.relay.processing.v1.RefundResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.GetSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.GetSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.GetSummaryRequest.displayName = 'proto.relay.processing.v1.GetSummaryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.GetSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.GetSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.GetSummaryResponse.displayName = 'proto.relay.processing.v1.GetSummaryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.GetOperationsSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.GetOperationsSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.GetOperationsSummaryRequest.displayName = 'proto.relay.processing.v1.GetOperationsSummaryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.GetOperationsSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relay.processing.v1.GetOperationsSummaryResponse.repeatedFields_, null);
};
goog.inherits(proto.relay.processing.v1.GetOperationsSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.GetOperationsSummaryResponse.displayName = 'proto.relay.processing.v1.GetOperationsSummaryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.ChargeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.ChargeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.ChargeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.ChargeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentMethodConfigurationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 4, 0),
    order: (f = msg.getOrder()) && relay_processing_v1_models_pb.Order.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.ChargeRequest}
 */
proto.relay.processing.v1.ChargeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.ChargeRequest;
  return proto.relay.processing.v1.ChargeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.ChargeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.ChargeRequest}
 */
proto.relay.processing.v1.ChargeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodConfigurationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 4:
      var value = /** @type {!proto.relay.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    case 5:
      var value = new relay_processing_v1_models_pb.Order;
      reader.readMessage(value,relay_processing_v1_models_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.ChargeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.ChargeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.ChargeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.ChargeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentMethodConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      relay_processing_v1_models_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string payment_method_configuration_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getPaymentMethodConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.setPaymentMethodConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reference = 3;
 * @return {string}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional relay.PaymentMethod payment_method = 4;
 * @return {!proto.relay.PaymentMethod}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getPaymentMethod = function() {
  return /** @type {!proto.relay.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.relay.PaymentMethod} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Order order = 5;
 * @return {?proto.relay.processing.v1.Order}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getOrder = function() {
  return /** @type{?proto.relay.processing.v1.Order} */ (
    jspb.Message.getWrapperField(this, relay_processing_v1_models_pb.Order, 5));
};


/**
 * @param {?proto.relay.processing.v1.Order|undefined} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
*/
proto.relay.processing.v1.ChargeRequest.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.ChargeRequest.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Any data = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.relay.processing.v1.ChargeRequest.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
*/
proto.relay.processing.v1.ChargeRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.ChargeRequest} returns this
 */
proto.relay.processing.v1.ChargeRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.ChargeRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.ChargeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.ChargeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.ChargeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.ChargeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    chargeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.ChargeResponse}
 */
proto.relay.processing.v1.ChargeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.ChargeResponse;
  return proto.relay.processing.v1.ChargeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.ChargeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.ChargeResponse}
 */
proto.relay.processing.v1.ChargeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChargeId(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.ChargeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.ChargeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.ChargeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.ChargeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChargeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.ChargeResponse.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
 */
proto.relay.processing.v1.ChargeResponse.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string charge_id = 2;
 * @return {string}
 */
proto.relay.processing.v1.ChargeResponse.prototype.getChargeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
 */
proto.relay.processing.v1.ChargeResponse.prototype.setChargeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Any data = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.relay.processing.v1.ChargeResponse.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
*/
proto.relay.processing.v1.ChargeResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
 */
proto.relay.processing.v1.ChargeResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.ChargeResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.processing.v1.ChargeResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
*/
proto.relay.processing.v1.ChargeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.ChargeResponse} returns this
 */
proto.relay.processing.v1.ChargeResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.ChargeResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.RefundRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.RefundRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.RefundRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.RefundRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.RefundRequest}
 */
proto.relay.processing.v1.RefundRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.RefundRequest;
  return proto.relay.processing.v1.RefundRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.RefundRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.RefundRequest}
 */
proto.relay.processing.v1.RefundRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.RefundRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.RefundRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.RefundRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.RefundRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.RefundRequest.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
 */
proto.relay.processing.v1.RefundRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.relay.processing.v1.RefundRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
 */
proto.relay.processing.v1.RefundRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reference = 3;
 * @return {string}
 */
proto.relay.processing.v1.RefundRequest.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
 */
proto.relay.processing.v1.RefundRequest.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 amount = 4;
 * @return {number}
 */
proto.relay.processing.v1.RefundRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
 */
proto.relay.processing.v1.RefundRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Any data = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.relay.processing.v1.RefundRequest.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
*/
proto.relay.processing.v1.RefundRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.RefundRequest} returns this
 */
proto.relay.processing.v1.RefundRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.RefundRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.RefundResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.RefundResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.RefundResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.RefundResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    refundId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.RefundResponse}
 */
proto.relay.processing.v1.RefundResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.RefundResponse;
  return proto.relay.processing.v1.RefundResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.RefundResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.RefundResponse}
 */
proto.relay.processing.v1.RefundResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefundId(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.RefundResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.RefundResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.RefundResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.RefundResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefundId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional string refund_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.RefundResponse.prototype.getRefundId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.RefundResponse} returns this
 */
proto.relay.processing.v1.RefundResponse.prototype.setRefundId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any data = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.relay.processing.v1.RefundResponse.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.relay.processing.v1.RefundResponse} returns this
*/
proto.relay.processing.v1.RefundResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.RefundResponse} returns this
 */
proto.relay.processing.v1.RefundResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.RefundResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.processing.v1.RefundResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.processing.v1.RefundResponse} returns this
*/
proto.relay.processing.v1.RefundResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.RefundResponse} returns this
 */
proto.relay.processing.v1.RefundResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.RefundResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.GetSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.GetSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.GetSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.GetSummaryRequest}
 */
proto.relay.processing.v1.GetSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.GetSummaryRequest;
  return proto.relay.processing.v1.GetSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.GetSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.GetSummaryRequest}
 */
proto.relay.processing.v1.GetSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.GetSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.GetSummaryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.GetSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.GetSummaryRequest.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.GetSummaryRequest} returns this
 */
proto.relay.processing.v1.GetSummaryRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.GetSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.GetSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    chargedAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    canceledAmount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    refundedAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.GetSummaryResponse}
 */
proto.relay.processing.v1.GetSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.GetSummaryResponse;
  return proto.relay.processing.v1.GetSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.GetSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.GetSummaryResponse}
 */
proto.relay.processing.v1.GetSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAuthorizedAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChargedAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCanceledAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefundedAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.GetSummaryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.GetSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedAmount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getChargedAmount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCanceledAmount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRefundedAmount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 authorized_amount = 1;
 * @return {number}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getAuthorizedAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.setAuthorizedAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 charged_amount = 2;
 * @return {number}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getChargedAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.setChargedAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 canceled_amount = 3;
 * @return {number}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getCanceledAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.setCanceledAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 refunded_amount = 4;
 * @return {number}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getRefundedAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.setRefundedAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
*/
proto.relay.processing.v1.GetSummaryResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.GetSummaryResponse} returns this
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.GetSummaryResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.GetOperationsSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.GetOperationsSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryRequest}
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.GetOperationsSummaryRequest;
  return proto.relay.processing.v1.GetOperationsSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.GetOperationsSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryRequest}
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.GetOperationsSummaryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.GetOperationsSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.GetOperationsSummaryRequest} returns this
 */
proto.relay.processing.v1.GetOperationsSummaryRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.GetOperationsSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.GetOperationsSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    relay_processing_v1_models_pb.OperationSummary.toObject, includeInstance),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.GetOperationsSummaryResponse;
  return proto.relay.processing.v1.GetOperationsSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.GetOperationsSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new relay_processing_v1_models_pb.OperationSummary;
      reader.readMessage(value,relay_processing_v1_models_pb.OperationSummary.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.GetOperationsSummaryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.GetOperationsSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      relay_processing_v1_models_pb.OperationSummary.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OperationSummary operations = 1;
 * @return {!Array<!proto.relay.processing.v1.OperationSummary>}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.relay.processing.v1.OperationSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, relay_processing_v1_models_pb.OperationSummary, 1));
};


/**
 * @param {!Array<!proto.relay.processing.v1.OperationSummary>} value
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse} returns this
*/
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.relay.processing.v1.OperationSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.relay.processing.v1.OperationSummary}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.relay.processing.v1.OperationSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse} returns this
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse} returns this
*/
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.GetOperationsSummaryResponse} returns this
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.GetOperationsSummaryResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};


goog.object.extend(exports, proto.relay.processing.v1);
