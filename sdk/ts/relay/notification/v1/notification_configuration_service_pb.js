/* eslint-disable */
/*Generated by GenDocu.com*/
// source: relay/notification/v1/notification_configuration_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var relay_models_pb = require('../../../relay/models_pb.js');
goog.object.extend(proto, relay_models_pb);
goog.exportSymbol('proto.relay.notification.v1.CreateWebhookConfigurationRequest', null, global);
goog.exportSymbol('proto.relay.notification.v1.CreateWebhookConfigurationResponse', null, global);
goog.exportSymbol('proto.relay.notification.v1.DeleteConfigurationRequest', null, global);
goog.exportSymbol('proto.relay.notification.v1.DeleteConfigurationResponse', null, global);
goog.exportSymbol('proto.relay.notification.v1.GetConfigurationRequest', null, global);
goog.exportSymbol('proto.relay.notification.v1.GetConfigurationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relay.notification.v1.CreateWebhookConfigurationRequest.repeatedFields_, null);
};
goog.inherits(proto.relay.notification.v1.CreateWebhookConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.CreateWebhookConfigurationRequest.displayName = 'proto.relay.notification.v1.CreateWebhookConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.notification.v1.CreateWebhookConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.CreateWebhookConfigurationResponse.displayName = 'proto.relay.notification.v1.CreateWebhookConfigurationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.GetConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.notification.v1.GetConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.GetConfigurationRequest.displayName = 'proto.relay.notification.v1.GetConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.GetConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relay.notification.v1.GetConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.relay.notification.v1.GetConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.GetConfigurationResponse.displayName = 'proto.relay.notification.v1.GetConfigurationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.DeleteConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.notification.v1.DeleteConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.DeleteConfigurationRequest.displayName = 'proto.relay.notification.v1.DeleteConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.notification.v1.DeleteConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.notification.v1.DeleteConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.notification.v1.DeleteConfigurationResponse.displayName = 'proto.relay.notification.v1.DeleteConfigurationResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.CreateWebhookConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.CreateWebhookConfigurationRequest;
  return proto.relay.notification.v1.CreateWebhookConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEvents(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.CreateWebhookConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string events = 2;
 * @return {!Array<string>}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.getEventsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.setEventsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.addEvents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationRequest} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.CreateWebhookConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    notificationConfigurationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationResponse}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.CreateWebhookConfigurationResponse;
  return proto.relay.notification.v1.CreateWebhookConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationResponse}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotificationConfigurationId(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.CreateWebhookConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional string notification_configuration_id = 1;
 * @return {string}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.getNotificationConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.setNotificationConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} returns this
*/
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.notification.v1.CreateWebhookConfigurationResponse} returns this
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.notification.v1.CreateWebhookConfigurationResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.GetConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.GetConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.GetConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.GetConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    notificationConfigurationId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.GetConfigurationRequest}
 */
proto.relay.notification.v1.GetConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.GetConfigurationRequest;
  return proto.relay.notification.v1.GetConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.GetConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.GetConfigurationRequest}
 */
proto.relay.notification.v1.GetConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotificationConfigurationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.GetConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.GetConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.GetConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.GetConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string notification_configuration_id = 1;
 * @return {string}
 */
proto.relay.notification.v1.GetConfigurationRequest.prototype.getNotificationConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.notification.v1.GetConfigurationRequest} returns this
 */
proto.relay.notification.v1.GetConfigurationRequest.prototype.setNotificationConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relay.notification.v1.GetConfigurationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.GetConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.GetConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.GetConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.GetConfigurationResponse}
 */
proto.relay.notification.v1.GetConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.GetConfigurationResponse;
  return proto.relay.notification.v1.GetConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.GetConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.GetConfigurationResponse}
 */
proto.relay.notification.v1.GetConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEvents(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.GetConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.GetConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.GetConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string events = 1;
 * @return {!Array<string>}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.getEventsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.addEvents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional google.protobuf.Any data = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
*/
proto.relay.notification.v1.GetConfigurationResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
*/
proto.relay.notification.v1.GetConfigurationResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.notification.v1.GetConfigurationResponse} returns this
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.notification.v1.GetConfigurationResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.DeleteConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.DeleteConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.DeleteConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.DeleteConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    notificationConfigurationId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.DeleteConfigurationRequest}
 */
proto.relay.notification.v1.DeleteConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.DeleteConfigurationRequest;
  return proto.relay.notification.v1.DeleteConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.DeleteConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.DeleteConfigurationRequest}
 */
proto.relay.notification.v1.DeleteConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotificationConfigurationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.DeleteConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.DeleteConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.DeleteConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.DeleteConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string notification_configuration_id = 1;
 * @return {string}
 */
proto.relay.notification.v1.DeleteConfigurationRequest.prototype.getNotificationConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.notification.v1.DeleteConfigurationRequest} returns this
 */
proto.relay.notification.v1.DeleteConfigurationRequest.prototype.setNotificationConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.notification.v1.DeleteConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.notification.v1.DeleteConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.DeleteConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && relay_models_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.notification.v1.DeleteConfigurationResponse}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.notification.v1.DeleteConfigurationResponse;
  return proto.relay.notification.v1.DeleteConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.notification.v1.DeleteConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.notification.v1.DeleteConfigurationResponse}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 101:
      var value = new relay_models_pb.Status;
      reader.readMessage(value,relay_models_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.notification.v1.DeleteConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.notification.v1.DeleteConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.notification.v1.DeleteConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      relay_models_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional relay.Status status = 101;
 * @return {?proto.relay.Status}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.getStatus = function() {
  return /** @type{?proto.relay.Status} */ (
    jspb.Message.getWrapperField(this, relay_models_pb.Status, 101));
};


/**
 * @param {?proto.relay.Status|undefined} value
 * @return {!proto.relay.notification.v1.DeleteConfigurationResponse} returns this
*/
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.notification.v1.DeleteConfigurationResponse} returns this
 */
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.notification.v1.DeleteConfigurationResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 101) != null;
};


goog.object.extend(exports, proto.relay.notification.v1);
