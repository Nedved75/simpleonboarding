// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: relay/onboarding/v1/paymentmethods/ppro.proto

package paymentmethods

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitializeRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessDetails          *BusinessDetails          `protobuf:"bytes,1,opt,name=business_details,json=businessDetails,proto3" json:"business_details,omitempty"`
	PaymentMethodInformation *PaymentMethodInformation `protobuf:"bytes,2,opt,name=payment_method_information,json=paymentMethodInformation,proto3" json:"payment_method_information,omitempty"`
	LegalEntity              *LegalEntity              `protobuf:"bytes,3,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
}

func (x *InitializeRequestData) Reset() {
	*x = InitializeRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequestData) ProtoMessage() {}

func (x *InitializeRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequestData.ProtoReflect.Descriptor instead.
func (*InitializeRequestData) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequestData) GetBusinessDetails() *BusinessDetails {
	if x != nil {
		return x.BusinessDetails
	}
	return nil
}

func (x *InitializeRequestData) GetPaymentMethodInformation() *PaymentMethodInformation {
	if x != nil {
		return x.PaymentMethodInformation
	}
	return nil
}

func (x *InitializeRequestData) GetLegalEntity() *LegalEntity {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

type UpdateRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessDetails *BusinessDetails `protobuf:"bytes,1,opt,name=business_details,json=businessDetails,proto3" json:"business_details,omitempty"`
	LegalEntity     *LegalEntity     `protobuf:"bytes,3,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
}

func (x *UpdateRequestData) Reset() {
	*x = UpdateRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestData) ProtoMessage() {}

func (x *UpdateRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestData.ProtoReflect.Descriptor instead.
func (*UpdateRequestData) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRequestData) GetBusinessDetails() *BusinessDetails {
	if x != nil {
		return x.BusinessDetails
	}
	return nil
}

func (x *UpdateRequestData) GetLegalEntity() *LegalEntity {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

type BusinessDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format: ISO-18245, eg 4011
	// Regex: [0-9]{4}
	MerchantCategoryCode string `protobuf:"bytes,1,opt,name=merchant_category_code,json=merchantCategoryCode,proto3" json:"merchant_category_code,omitempty"`
	// Regex: [0-9a-zA-Z.%,&amp;/+*${|}- {0,255}
	PaymentDescriptor string `protobuf:"bytes,2,opt,name=payment_descriptor,json=paymentDescriptor,proto3" json:"payment_descriptor,omitempty"`
	// Regex: [^A-Za-z0-9:?/+(),_. -]{0,255}
	TradeName string `protobuf:"bytes,3,opt,name=trade_name,json=tradeName,proto3" json:"trade_name,omitempty"`
	// Max number of websites: 100
	Websites            []string             `protobuf:"bytes,4,rep,name=websites,proto3" json:"websites,omitempty"`
	MonthlyTransactions *MonthlyTransactions `protobuf:"bytes,5,opt,name=monthly_transactions,json=monthlyTransactions,proto3" json:"monthly_transactions,omitempty"`
	// Regex: [+]?[0-9]{8,19}
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// Regex: [ˆ@ ]+@[ˆ@ ]+\.[ˆ@ ]+
	EmailAddress      string                 `protobuf:"bytes,7,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	IncorporationDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=incorporation_date,json=incorporationDate,proto3" json:"incorporation_date,omitempty"`
}

func (x *BusinessDetails) Reset() {
	*x = BusinessDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessDetails) ProtoMessage() {}

func (x *BusinessDetails) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessDetails.ProtoReflect.Descriptor instead.
func (*BusinessDetails) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{2}
}

func (x *BusinessDetails) GetMerchantCategoryCode() string {
	if x != nil {
		return x.MerchantCategoryCode
	}
	return ""
}

func (x *BusinessDetails) GetPaymentDescriptor() string {
	if x != nil {
		return x.PaymentDescriptor
	}
	return ""
}

func (x *BusinessDetails) GetTradeName() string {
	if x != nil {
		return x.TradeName
	}
	return ""
}

func (x *BusinessDetails) GetWebsites() []string {
	if x != nil {
		return x.Websites
	}
	return nil
}

func (x *BusinessDetails) GetMonthlyTransactions() *MonthlyTransactions {
	if x != nil {
		return x.MonthlyTransactions
	}
	return nil
}

func (x *BusinessDetails) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BusinessDetails) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *BusinessDetails) GetIncorporationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IncorporationDate
	}
	return nil
}

type MonthlyTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count string `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"`
	// Regex: [0-9]+(.[0-9]{1,3})?
	AverageValue string `protobuf:"bytes,2,opt,name=average_value,json=averageValue,proto3" json:"average_value,omitempty"`
	// Format: ISO-4217 - Alphabetic Currency Code
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MonthlyTransactions) Reset() {
	*x = MonthlyTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyTransactions) ProtoMessage() {}

func (x *MonthlyTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyTransactions.ProtoReflect.Descriptor instead.
func (*MonthlyTransactions) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{3}
}

func (x *MonthlyTransactions) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *MonthlyTransactions) GetAverageValue() string {
	if x != nil {
		return x.AverageValue
	}
	return ""
}

func (x *MonthlyTransactions) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PaymentMethodInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditorResidence *Residence `protobuf:"bytes,1,opt,name=creditor_residence,json=creditorResidence,proto3" json:"creditor_residence,omitempty"`
	CreditorId        string     `protobuf:"bytes,2,opt,name=creditor_id,json=creditorId,proto3" json:"creditor_id,omitempty"`
	CreditorName      string     `protobuf:"bytes,3,opt,name=creditor_name,json=creditorName,proto3" json:"creditor_name,omitempty"`
}

func (x *PaymentMethodInformation) Reset() {
	*x = PaymentMethodInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodInformation) ProtoMessage() {}

func (x *PaymentMethodInformation) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodInformation.ProtoReflect.Descriptor instead.
func (*PaymentMethodInformation) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentMethodInformation) GetCreditorResidence() *Residence {
	if x != nil {
		return x.CreditorResidence
	}
	return nil
}

func (x *PaymentMethodInformation) GetCreditorId() string {
	if x != nil {
		return x.CreditorId
	}
	return ""
}

func (x *PaymentMethodInformation) GetCreditorName() string {
	if x != nil {
		return x.CreditorName
	}
	return ""
}

type LegalEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partnership           *Partnership           `protobuf:"bytes,1,opt,name=partnership,proto3" json:"partnership,omitempty"`
	Individual            *Individual            `protobuf:"bytes,2,opt,name=individual,proto3" json:"individual,omitempty"`
	Organization          *Organization          `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	NonProfitOrganization *NonprofitOrganization `protobuf:"bytes,4,opt,name=non_profit_organization,json=nonProfitOrganization,proto3" json:"non_profit_organization,omitempty"`
}

func (x *LegalEntity) Reset() {
	*x = LegalEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegalEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegalEntity) ProtoMessage() {}

func (x *LegalEntity) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegalEntity.ProtoReflect.Descriptor instead.
func (*LegalEntity) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{5}
}

func (x *LegalEntity) GetPartnership() *Partnership {
	if x != nil {
		return x.Partnership
	}
	return nil
}

func (x *LegalEntity) GetIndividual() *Individual {
	if x != nil {
		return x.Individual
	}
	return nil
}

func (x *LegalEntity) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *LegalEntity) GetNonProfitOrganization() *NonprofitOrganization {
	if x != nil {
		return x.NonProfitOrganization
	}
	return nil
}

type Partnership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex: ^.{0,255}$
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Regex: [0-9a-zA-Z]{1, 255}
	RegistrationNumber string     `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	Residence          *Residence `protobuf:"bytes,3,opt,name=residence,proto3" json:"residence,omitempty"`
	// Max number of partners: 30
	Partners []*Person `protobuf:"bytes,4,rep,name=partners,proto3" json:"partners,omitempty"`
}

func (x *Partnership) Reset() {
	*x = Partnership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Partnership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partnership) ProtoMessage() {}

func (x *Partnership) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partnership.ProtoReflect.Descriptor instead.
func (*Partnership) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{6}
}

func (x *Partnership) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Partnership) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *Partnership) GetResidence() *Residence {
	if x != nil {
		return x.Residence
	}
	return nil
}

func (x *Partnership) GetPartners() []*Person {
	if x != nil {
		return x.Partners
	}
	return nil
}

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex: ^.{0,255}$
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Regex: ^.{0,255}$
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Regex: ^.{0,255}$
	MiddleName string `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// Regex: ^.{0,255}$
	LastName string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{7}
}

func (x *Name) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Name) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Name) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Name) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type Individual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex: ^.{0,255}$
	Name      string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Residence *Residence `protobuf:"bytes,2,opt,name=residence,proto3" json:"residence,omitempty"`
	Person    *Person    `protobuf:"bytes,3,opt,name=person,proto3" json:"person,omitempty"`
}

func (x *Individual) Reset() {
	*x = Individual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Individual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Individual) ProtoMessage() {}

func (x *Individual) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Individual.ProtoReflect.Descriptor instead.
func (*Individual) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{8}
}

func (x *Individual) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Individual) GetResidence() *Residence {
	if x != nil {
		return x.Residence
	}
	return nil
}

func (x *Individual) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex: ^.{0,255}$
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Regex:[0-9a-zA-Z]{1, 255}
	RegistrationNumber string     `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	Residence          *Residence `protobuf:"bytes,3,opt,name=residence,proto3" json:"residence,omitempty"`
	// Max number of directors: 30
	Directors []*Person `protobuf:"bytes,4,rep,name=directors,proto3" json:"directors,omitempty"`
	// Max number of ultimate beneficial ownwers: 30
	UltimateBeneficialOwners []*Person `protobuf:"bytes,5,rep,name=ultimate_beneficial_owners,json=ultimateBeneficialOwners,proto3" json:"ultimate_beneficial_owners,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{9}
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *Organization) GetResidence() *Residence {
	if x != nil {
		return x.Residence
	}
	return nil
}

func (x *Organization) GetDirectors() []*Person {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *Organization) GetUltimateBeneficialOwners() []*Person {
	if x != nil {
		return x.UltimateBeneficialOwners
	}
	return nil
}

type NonprofitOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex: ^.{0,255}$
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Regex:[0-9a-zA-Z]{1, 255}
	RegistrationNumber string     `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	Residence          *Residence `protobuf:"bytes,3,opt,name=residence,proto3" json:"residence,omitempty"`
	// Max number of directors: 30
	Directors []*Person `protobuf:"bytes,4,rep,name=directors,proto3" json:"directors,omitempty"`
	// Max number of ultimate beneficial ownwers: 30
	UltimateBeneficialOwners []*Person `protobuf:"bytes,5,rep,name=ultimate_beneficial_owners,json=ultimateBeneficialOwners,proto3" json:"ultimate_beneficial_owners,omitempty"`
}

func (x *NonprofitOrganization) Reset() {
	*x = NonprofitOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonprofitOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonprofitOrganization) ProtoMessage() {}

func (x *NonprofitOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonprofitOrganization.ProtoReflect.Descriptor instead.
func (*NonprofitOrganization) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{10}
}

func (x *NonprofitOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NonprofitOrganization) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *NonprofitOrganization) GetResidence() *Residence {
	if x != nil {
		return x.Residence
	}
	return nil
}

func (x *NonprofitOrganization) GetDirectors() []*Person {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *NonprofitOrganization) GetUltimateBeneficialOwners() []*Person {
	if x != nil {
		return x.UltimateBeneficialOwners
	}
	return nil
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *Name                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DateOfBirth *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Residence   *Residence             `protobuf:"bytes,3,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{11}
}

func (x *Person) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Person) GetDateOfBirth() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *Person) GetResidence() *Residence {
	if x != nil {
		return x.Residence
	}
	return nil
}

type Residence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	// Regex: [0-9a-zA-Z- ]{1,31}
	ZipCode string `protobuf:"bytes,2,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	// Regex: [0-9a-zA-Z- ]{1, 255}
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// Regex: [0-9a-zA-Z- ]{0, 255}
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	// Format: ISO-3166
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Residence) Reset() {
	*x = Residence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Residence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Residence) ProtoMessage() {}

func (x *Residence) ProtoReflect() protoreflect.Message {
	mi := &file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Residence.ProtoReflect.Descriptor instead.
func (*Residence) Descriptor() ([]byte, []int) {
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP(), []int{12}
}

func (x *Residence) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Residence) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Residence) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Residence) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Residence) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_relay_onboarding_v1_paymentmethods_ppro_proto protoreflect.FileDescriptor

var file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x2f, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x27, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a, 0x15, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x63, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x7f, 0x0a, 0x1a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x63, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x57, 0x0a,
	0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x4c, 0x65,
	0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xb5, 0x03, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x14, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70,
	0x72, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x6c,
	0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xc3, 0x01, 0x0a,
	0x18, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x12, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x8d, 0x03, 0x0a, 0x0b, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72,
	0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x53, 0x0a, 0x0a, 0x69, 0x6e,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x12,
	0x59, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x17, 0x6e, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x6e, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e,
	0x70, 0x70, 0x72, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22,
	0xe3, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70,
	0x72, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e,
	0x70, 0x70, 0x72, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x1a, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e,
	0x70, 0x70, 0x72, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x18, 0x75, 0x6c, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0xec, 0x02, 0x0a, 0x15, 0x4e, 0x6f, 0x6e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70,
	0x70, 0x72, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x1a, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70,
	0x70, 0x72, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x18, 0x75, 0x6c, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x41, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x70, 0x72, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x7a, 0x5a, 0x4e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x65, 0x64, 0x76, 0x65, 0x64,
	0x37, 0x35, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0xaa, 0x02, 0x27,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x56, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x2e, 0x50, 0x70, 0x72, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescOnce sync.Once
	file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescData = file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDesc
)

func file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescGZIP() []byte {
	file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescOnce.Do(func() {
		file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescData = protoimpl.X.CompressGZIP(file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescData)
	})
	return file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDescData
}

var file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_relay_onboarding_v1_paymentmethods_ppro_proto_goTypes = []interface{}{
	(*InitializeRequestData)(nil),    // 0: relay.onboarding.v1.paymentmethods.ppro.InitializeRequestData
	(*UpdateRequestData)(nil),        // 1: relay.onboarding.v1.paymentmethods.ppro.UpdateRequestData
	(*BusinessDetails)(nil),          // 2: relay.onboarding.v1.paymentmethods.ppro.BusinessDetails
	(*MonthlyTransactions)(nil),      // 3: relay.onboarding.v1.paymentmethods.ppro.MonthlyTransactions
	(*PaymentMethodInformation)(nil), // 4: relay.onboarding.v1.paymentmethods.ppro.PaymentMethodInformation
	(*LegalEntity)(nil),              // 5: relay.onboarding.v1.paymentmethods.ppro.LegalEntity
	(*Partnership)(nil),              // 6: relay.onboarding.v1.paymentmethods.ppro.Partnership
	(*Name)(nil),                     // 7: relay.onboarding.v1.paymentmethods.ppro.Name
	(*Individual)(nil),               // 8: relay.onboarding.v1.paymentmethods.ppro.Individual
	(*Organization)(nil),             // 9: relay.onboarding.v1.paymentmethods.ppro.Organization
	(*NonprofitOrganization)(nil),    // 10: relay.onboarding.v1.paymentmethods.ppro.NonprofitOrganization
	(*Person)(nil),                   // 11: relay.onboarding.v1.paymentmethods.ppro.Person
	(*Residence)(nil),                // 12: relay.onboarding.v1.paymentmethods.ppro.Residence
	(*timestamppb.Timestamp)(nil),    // 13: google.protobuf.Timestamp
}
var file_relay_onboarding_v1_paymentmethods_ppro_proto_depIdxs = []int32{
	2,  // 0: relay.onboarding.v1.paymentmethods.ppro.InitializeRequestData.business_details:type_name -> relay.onboarding.v1.paymentmethods.ppro.BusinessDetails
	4,  // 1: relay.onboarding.v1.paymentmethods.ppro.InitializeRequestData.payment_method_information:type_name -> relay.onboarding.v1.paymentmethods.ppro.PaymentMethodInformation
	5,  // 2: relay.onboarding.v1.paymentmethods.ppro.InitializeRequestData.legal_entity:type_name -> relay.onboarding.v1.paymentmethods.ppro.LegalEntity
	2,  // 3: relay.onboarding.v1.paymentmethods.ppro.UpdateRequestData.business_details:type_name -> relay.onboarding.v1.paymentmethods.ppro.BusinessDetails
	5,  // 4: relay.onboarding.v1.paymentmethods.ppro.UpdateRequestData.legal_entity:type_name -> relay.onboarding.v1.paymentmethods.ppro.LegalEntity
	3,  // 5: relay.onboarding.v1.paymentmethods.ppro.BusinessDetails.monthly_transactions:type_name -> relay.onboarding.v1.paymentmethods.ppro.MonthlyTransactions
	13, // 6: relay.onboarding.v1.paymentmethods.ppro.BusinessDetails.incorporation_date:type_name -> google.protobuf.Timestamp
	12, // 7: relay.onboarding.v1.paymentmethods.ppro.PaymentMethodInformation.creditor_residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	6,  // 8: relay.onboarding.v1.paymentmethods.ppro.LegalEntity.partnership:type_name -> relay.onboarding.v1.paymentmethods.ppro.Partnership
	8,  // 9: relay.onboarding.v1.paymentmethods.ppro.LegalEntity.individual:type_name -> relay.onboarding.v1.paymentmethods.ppro.Individual
	9,  // 10: relay.onboarding.v1.paymentmethods.ppro.LegalEntity.organization:type_name -> relay.onboarding.v1.paymentmethods.ppro.Organization
	10, // 11: relay.onboarding.v1.paymentmethods.ppro.LegalEntity.non_profit_organization:type_name -> relay.onboarding.v1.paymentmethods.ppro.NonprofitOrganization
	12, // 12: relay.onboarding.v1.paymentmethods.ppro.Partnership.residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	11, // 13: relay.onboarding.v1.paymentmethods.ppro.Partnership.partners:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	12, // 14: relay.onboarding.v1.paymentmethods.ppro.Individual.residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	11, // 15: relay.onboarding.v1.paymentmethods.ppro.Individual.person:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	12, // 16: relay.onboarding.v1.paymentmethods.ppro.Organization.residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	11, // 17: relay.onboarding.v1.paymentmethods.ppro.Organization.directors:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	11, // 18: relay.onboarding.v1.paymentmethods.ppro.Organization.ultimate_beneficial_owners:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	12, // 19: relay.onboarding.v1.paymentmethods.ppro.NonprofitOrganization.residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	11, // 20: relay.onboarding.v1.paymentmethods.ppro.NonprofitOrganization.directors:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	11, // 21: relay.onboarding.v1.paymentmethods.ppro.NonprofitOrganization.ultimate_beneficial_owners:type_name -> relay.onboarding.v1.paymentmethods.ppro.Person
	7,  // 22: relay.onboarding.v1.paymentmethods.ppro.Person.name:type_name -> relay.onboarding.v1.paymentmethods.ppro.Name
	13, // 23: relay.onboarding.v1.paymentmethods.ppro.Person.date_of_birth:type_name -> google.protobuf.Timestamp
	12, // 24: relay.onboarding.v1.paymentmethods.ppro.Person.residence:type_name -> relay.onboarding.v1.paymentmethods.ppro.Residence
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_relay_onboarding_v1_paymentmethods_ppro_proto_init() }
func file_relay_onboarding_v1_paymentmethods_ppro_proto_init() {
	if File_relay_onboarding_v1_paymentmethods_ppro_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegalEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Partnership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Individual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonprofitOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Residence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_relay_onboarding_v1_paymentmethods_ppro_proto_goTypes,
		DependencyIndexes: file_relay_onboarding_v1_paymentmethods_ppro_proto_depIdxs,
		MessageInfos:      file_relay_onboarding_v1_paymentmethods_ppro_proto_msgTypes,
	}.Build()
	File_relay_onboarding_v1_paymentmethods_ppro_proto = out.File
	file_relay_onboarding_v1_paymentmethods_ppro_proto_rawDesc = nil
	file_relay_onboarding_v1_paymentmethods_ppro_proto_goTypes = nil
	file_relay_onboarding_v1_paymentmethods_ppro_proto_depIdxs = nil
}
